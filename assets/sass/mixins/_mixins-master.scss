// Rem output with px fallback
@mixin font-size($sizeValue: 1.6) {
	font-size: ($sizeValue * 10) + px;
	font-size: $sizeValue + rem;
}

// Box model
@mixin box-sizing($box-model) {
	-webkit-box-sizing: $box-model; // Safari <= 7
	-moz-box-sizing: $box-model; // Firefox <= 19
	box-sizing: $box-model;
}

// Border radius
@mixin border-radius($radius) {
	background-clip: padding-box; /* stops bg color from leaking outside the border: */
	-webkit-border-radius: $radius;
	border-radius: $radius;
}

// Transitions
@mixin transition($property: all, $speed: .5s, $effect: ease-in-out) {
	-webkit-transition: $property $speed $effect;
	-moz-transition: $property $speed $effect;
	-ms-transition: $property $speed $effect;
	-o-transition: $property $speed $effect;
	transition: $property $speed $effect;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Background Color with opacity 
@mixin transparent($color, $alpha: .8) {
  $rgba: rgba($color, $alpha);
  background-color: $color;
  $ie-hex-str: ie-hex-str($rgba);
  background-color: $rgba;
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
 }
